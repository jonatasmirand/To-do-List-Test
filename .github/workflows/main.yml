name: Pipeline CI/CD

on:
  push:
    branches:
      - main
    paths:
      - "src/**"
      - ".github/workflows/**"
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do código
        uses: actions/checkout@v5

      - name: Instalação do Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: package-lock.json

      - name: Instalação das dependências
        run: npm install

      - name: Rodar o build
        run: npm run build

  tests:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout do código
        uses: actions/checkout@v5

      - name: Instalação do Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: package-lock.json

      - name: Instalar dependências
        run: npm ci

      - name: Instalar ESLint (se faltar)
        run: npm install eslint --save-dev

      - name: Rodar o lint
        run: npm run lint

  deploy:
    runs-on: ubuntu-latest
    needs: tests

    steps:
      - name: Checkout do código
        uses: actions/checkout@v5

      - name: Instalação do Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: package-lock.json

      - name: Instalar Vercel CLI
        run: npm install -g vercel@latest

      - name: Deploy pra Vercel
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        run: vercel --prod --yes --token=$VERCEL_TOKEN 
